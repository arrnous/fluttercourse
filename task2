import 'package:flutter/material.dart';

class Login extends StatefulWidget {
  @override
  State<Login> createState() => _LoginState();
}

class _LoginState extends State<Login> {
  bool _passwordVisible = true;
  bool _passwordVisible2 = true;

  var _userPasswordController;
  var _userPasswordController2;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      // appBar: AppBar(centerTitle: true, title: Text("Rigester")),
      body: SingleChildScrollView(
        child: Column(
          children: [
            Stack(
              children: [
                ClipPath(
                  clipper: WaveClip(),
                  child: Container(
                    padding: const EdgeInsets.only(bottom: 450),
                    color: Colors.deepPurple.withOpacity(.8),
                    height: 220,
                    alignment: Alignment.center,
                  ),
                ),
                Center(
                  child: Container(
                    padding: EdgeInsets.only(top: 100),
                    child: Text(
                      "Register",
                      style: TextStyle(
                          fontSize: 30,
                          fontWeight: FontWeight.bold,
                          color: Colors.white),
                    ),
                  ),
                )
              ],
            ),
            SizedBox(
              height: 100,
            ),
            Center(
              child: Column(
                children: [
                  SizedBox(
                    height: 10,
                  ),
                  Container(
                    padding: EdgeInsets.symmetric(horizontal: 20),
                    child: TextField(
                      keyboardType: TextInputType.text,
                      enabled: true,
                      style: TextStyle(
                        color: Colors.deepPurple,
                      ),
                      cursorHeight: 20,
                      autofocus: false,
                      decoration: InputDecoration(
                        filled: true,
                        fillColor: Colors.deepPurple.withOpacity(0.2),
                        hintStyle: TextStyle(color: Colors.deepPurple),
                        labelText: "Username",
                        hintText: "Enter your Username",
                        prefixIcon: Icon(Icons.person_2_outlined),
                        contentPadding: const EdgeInsets.symmetric(
                            vertical: 10, horizontal: 10),
                        enabledBorder: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(0),
                          borderSide: BorderSide(
                              color: Colors.deepPurple.withOpacity(0.2),
                              width: 1.5),
                        ),
                      ),
                    ),
                  ),
                  SizedBox(
                    height: 15,
                  ),
                  Container(
                    padding: EdgeInsets.symmetric(horizontal: 20),
                    child: TextField(
                      // decoration: InputDecoration(fillColor: Colors.orange, filled: true),
                      style: TextStyle(
                        color: Colors.deepPurple,
                      ),
                      cursorHeight: 20,
                      autofocus: false,
                      keyboardType: TextInputType.phone,
                      decoration: InputDecoration(
                        filled: true,
                        fillColor: Colors.deepPurple.withOpacity(0.2),
                        hintStyle: TextStyle(color: Colors.deepPurple),
                        labelText: "Mobile Number",
                        hintText: "Enter your mobile number",
                        prefixIcon: Icon(Icons.phone_android),
                        contentPadding: const EdgeInsets.symmetric(
                            vertical: 10, horizontal: 10),
                        enabledBorder: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(0),
                          borderSide: BorderSide(
                              color: Colors.deepPurple.withOpacity(0.2),
                              width: 1.5),
                        ),
                      ),
                    ),
                  ),
                  SizedBox(
                    height: 15,
                  ),
                  Container(
                    padding: EdgeInsets.symmetric(horizontal: 20),
                    child: TextField(
                      keyboardType: TextInputType.emailAddress,
                      enabled: true,
                      style: TextStyle(
                        color: Colors.deepPurple,
                      ),
                      cursorHeight: 20,
                      autofocus: false,
                      decoration: InputDecoration(
                        filled: true,
                        fillColor: Colors.deepPurple.withOpacity(0.2),
                        hintStyle: TextStyle(color: Colors.deepPurple),
                        labelText: "Email",
                        hintText: "Enter your email",
                        prefixIcon: Icon(Icons.email_outlined),
                        contentPadding: const EdgeInsets.symmetric(
                            vertical: 10, horizontal: 10),
                        enabledBorder: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(0),
                          borderSide: BorderSide(
                              color: Colors.deepPurple.withOpacity(0.2),
                              width: 1.5),
                        ),
                      ),
                    ),
                  ),
                  SizedBox(
                    height: 15,
                  ),
                  Container(
                    padding: EdgeInsets.symmetric(horizontal: 20),
                    child: TextField(
                      obscureText: _passwordVisible,
                      // decoration: InputDecoration(fillColor: Colors.orange, filled: true),
                      style: TextStyle(
                        color: Colors.deepPurple,
                      ),
                      cursorHeight: 20,
                      autofocus: false,
                      keyboardType: TextInputType.text,
                      // controller: _userPasswordController,
                      decoration: InputDecoration(
                        suffixIcon: IconButton(
                          icon: Icon(
                            // Based on passwordVisible state choose the icon
                            _passwordVisible == true
                                ? Icons.visibility
                                : Icons.visibility_off,
                            color: Theme.of(context).primaryColorDark,
                          ),
                          onPressed: () {
                            setState(() {
                              _passwordVisible = true
                                  ? _passwordVisible == false
                                  : _passwordVisible == true;
                            });
                          },
                        ),
                        filled: true,
                        fillColor: Colors.deepPurple.withOpacity(0.2),
                        hintStyle: TextStyle(color: Colors.deepPurple),
                        labelText: "password",
                        hintText: "Enter your password",
                        prefixIcon: Icon(Icons.lock_outline),
                        contentPadding: const EdgeInsets.symmetric(
                            vertical: 10, horizontal: 10),
                        enabledBorder: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(0),
                          borderSide: BorderSide(
                              color: Colors.deepPurple.withOpacity(0.2),
                              width: 1.5),
                        ),
                      ),
                    ),
                  ),
                  SizedBox(
                    height: 10,
                  ),
                  Container(
                    padding: EdgeInsets.symmetric(horizontal: 20),
                    child: TextField(
                      obscureText: _passwordVisible2,
                      // decoration: InputDecoration(fillColor: Colors.orange, filled: true),
                      style: TextStyle(
                        color: Colors.deepPurple,
                      ),
                      cursorHeight: 20,
                      autofocus: false,
                      keyboardType: TextInputType.text,
                      controller: _userPasswordController2,
                      decoration: InputDecoration(
                        suffixIcon: IconButton(
                          icon: Icon(
                            // Based on passwordVisible state choose the icon
                            _passwordVisible2 == true
                                ? Icons.visibility
                                : Icons.visibility_off,
                            color: Theme.of(context).primaryColorDark,
                          ),
                          onPressed: () {
                            setState(() {
                              _passwordVisible2 = true
                                  ? _passwordVisible2 == false
                                  : _passwordVisible2 == true;
                            });
                          },
                        ),
                        filled: true,
                        fillColor: Colors.deepPurple.withOpacity(0.2),
                        hintStyle: TextStyle(color: Colors.deepPurple),
                        labelText: "Confitm Password",
                        hintText: "Confirm Password",
                        prefixIcon: Icon(Icons.lock_outline),
                        contentPadding: const EdgeInsets.symmetric(
                            vertical: 10, horizontal: 10),
                        enabledBorder: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(0),
                          borderSide: BorderSide(
                              color: Colors.deepPurple.withOpacity(0.2),
                              width: 1.5),
                        ),
                      ),
                    ),
                  ),
                ],
              ),
            ),
            SizedBox(
              height: 30,
            ),
            Container(
              decoration: BoxDecoration(color: Colors.deepPurple),
              padding: EdgeInsets.symmetric(horizontal: 20),
              width: 343,
              child: MaterialButton(
                onPressed: () {},
                child: Text(
                  "Register",
                  style: TextStyle(color: Colors.white, fontSize: 16),
                ),
              ),
            ),
            SizedBox(
              height: 10,
            ),
            Container(
              decoration: BoxDecoration(
                  color: Colors.white,
                  border: Border.all(color: Colors.deepPurple)),
              padding: EdgeInsets.symmetric(horizontal: 20),
              width: 343,
              child: MaterialButton(
                onPressed: () {},
                child: Text(
                  "Login",
                  style: TextStyle(color: Colors.deepPurple, fontSize: 16),
                ),
              ),
            )
          ],
        ),
      ),
    );
  }
}

class CustomToolbarShape extends CustomPainter {
  @override
  void paint(Canvas canvas, Size size) {
    Paint paint = Paint();
    paint.color = Color.fromARGB(255, 11, 121, 211);
    paint.style = PaintingStyle.fill;
    paint.strokeWidth = 10;

    TextSpan span = new TextSpan(
        style: new TextStyle(color: Colors.blue[800]), text: "hello");
    TextPainter tp = new TextPainter(
        text: span,
        textAlign: TextAlign.left,
        textDirection: TextDirection.ltr);
    tp.layout();
    tp.paint(canvas, new Offset(5.0, 5.0));

    var path = Path();

    path.lineTo(0, size.height * 0.39);
    path.lineTo(size.width * 0.20, size.height * 0.36);
    path.lineTo(size.width * 0.30, size.height * 0.36);
    path.lineTo(size.width * 0.45, size.height * 0.37);
    path.lineTo(size.width * 0.60, size.height * 0.39);
    path.lineTo(size.width * 0.68, size.height * 0.40);
    path.lineTo(size.width * 0.72, size.height * 0.40);

    path.lineTo(size.width, size.height / 2.7);
    path.lineTo(size.width, 0);

    /*   path.lineTo(x, y);
    path.lineTo(x, y);
    path.lineTo(x, y);
 */
    //  path.close();
    canvas.drawPath(path, paint);
  }

  @override
  bool shouldRepaint(CustomPainter oldDelegate) {
    return true;
  }
}

class WaveClip extends CustomClipper<Path> {
  @override
  Path getClip(Size size) {
    Path path = new Path();
    final lowPoint = size.height - 20;
    final highPoint = size.height - 20;
    path.lineTo(0, size.height);
    path.quadraticBezierTo(size.width / 4, highPoint, size.width / 2, lowPoint);
    path.quadraticBezierTo(
        3 / 4 * size.width, size.height, size.width, lowPoint);
    path.lineTo(size.width, 0);
    return path;
  }

  @override
  bool shouldReclip(CustomClipper<Path> oldClipper) {
    return false;
  }
}
